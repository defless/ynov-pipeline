name: Python application

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  lint:
    timeout-minutes: 5
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.11
      uses: actions/setup-python@v2
      with:
        python-version: 3.11
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8
    - name: Lint with flake8
      run: |
        flake8 controllers.py
        flake8 routes.py
  tests:
    timeout-minutes: 5
    runs-on: ubuntu-latest
    if: ${{ always() && contains(join(needs.*.result, ','), 'success') }}
    needs: [lint]
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11"]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi

    - name: Test with pytest
      run: |
        pytest --doctest-modules controllers.py --cov=app controllers.py > pytest-coverage.txt

  warn:
    timeout-minutes: 5
    runs-on: ubuntu-latest
    if: ${{ always() }}
    needs: [tests, lint]
    steps:
      - uses: actions/checkout@v3
      - name: Check is on
        run: |
          HTTP=$(curl -s -o /dev/null -w "%{http_code}" http://www.google.com)
          if [ $HTTP == 200 ]
          then
            echo "OK" 
          else 
            echo "not OK"
          fi
      - name: warn
        run:
          echo 'Pipeline ended'
      
      
        
